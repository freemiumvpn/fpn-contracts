syntax = "proto3";

package vpn;

option go_package = "/";

service VpnService {
    rpc Create(CreateRequest) returns (CreateResponse);
    rpc Delete(DeleteRequest) returns (DeleteResponse);
    rpc Connect(ConnectRequest) returns (ConnectResponse);
    rpc Disconnect(DisconnectRequest) returns (DisconnectResponse);
    rpc GetSession(GetSessionRequest) returns (GetSessionResponse);
    rpc SubscribeToSession(SubsribeToSessionRequest) returns (stream SubscribeToSessionResponse);
}

enum VpnSessionStatus {
    NONE = 0;

    /**
    * CREATE Cycle
    **/
    CREATE_REQUEST_SENT = 1;
    CREATE_REQUEST_ACKNOWLEDGED = 2;
    CREATE_REQUEST_APPROVED = 3;
    CREATE_REQUEST_DENIED = 4;
    CREATE_REQUEST_ERROR = 5;

    /**
    * CONNECT cycle
    **/
    CONNECT_REQUEST_SENT = 6;
    CONNECT_REQUEST_ACKNOWLEDGED = 7;
    CONNECT_REQUEST_APPROVED = 8;
    CONNECT_REQUEST_DENIED = 9;
    CONNECT_REQUEST_ERROR = 10;

    /**
    * DISCONNET cycle
    **/
    DISCONNECT_REQUEST_SENT = 11;
    DISCONNECT_REQUEST_ACKNOWLEDGED = 12;
    DISCONNECT_REQUEST_APPROVED = 13;
    DISCONNECT_REQUEST_DENIED = 14;
    DISCONNECT_REQUEST_ERROR = 15;

    /**
    * DELETE cycle
    **/
    DELETE_REQUEST_SENT = 16;
    DELETE_REQUEST_ACKNOWLEDGED = 17;
    DELETE_REQUEST_APPROVED = 18;
    DELETE_REQUEST_DENIED = 19;
    DELETE_REQUEST_ERROR = 20;

    /**
    * Session cycle
    **/
    IDLE = 21;
    CONNECTED = 22;
    DISCONNECTED = 23;
    ERROR = 24;
}

message CreateRequest {
    string user_id = 1;
}

message CreateResponse {
    string credentials = 1;
    VpnSessionStatus status = 2;
}

message DeleteRequest {
    string user_id = 1;
}

message DeleteResponse {
    VpnSessionStatus status = 1;
}

message ConnectRequest {
    string user_id = 1;
}

message ConnectResponse {
    VpnSessionStatus status = 1;
}

message DisconnectRequest {
    string user_id = 1;
}

message DisconnectResponse {
    VpnSessionStatus status = 1;
}

message GetSessionRequest {
    string user_id = 1;
}

message GetSessionResponse {
    string credentials = 1;
    VpnSessionStatus status = 2;
}

message SubsribeToSessionRequest {
    string user_id = 1;
}

message SubscribeToSessionResponse {
    VpnSessionStatus status = 1;
}
